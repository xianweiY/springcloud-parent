######################################################################################
###	 *配置说明*										  							   ###
###  1.公共配置包含系统共有的配置，环境配置包含特定环境的特有配置          						 	   ###
###  2.若有需要，环境指定配置变量可覆盖公共对应变量			  						 	   ###
###	 3.运行时配置包含application.properties和application-env(泛指).properties中的配置            ###
######################################################################################
###### 公共配置 ######
#服务名
spring.application.name=demo-eureka
#服务根路径
server.servlet.context-path=/demo-eureka
#服务端口
server.port=8761

#eureka安全访问
spring.security.basic.enabled=true

#注册中心地址
eureka.client.service-url.defaultZone=http://${spring.security.user.name}:${spring.security.user.password}@${eureka.instance.hostname}:${server.port}/${server.servlet.context-path}/eureka
# 服务刷新时间配置，每隔这个时间会主动心跳一次,默认30s
eureka.instance.lease-renewal-interval-in-seconds=15
# 服务过期时间配置,超过这个时间没有接收到心跳EurekaServer就会将这个实例剔除，默认90s
# EurekaServer一定要设置eureka.server.eviction-interval-timer-in-ms， 否则这个配置无效，这个配置一般为服务刷新时间配置的三倍
eureka.instance.lease-expiration-duration-in-seconds=45
#是否自我注册
eureka.client.register-with-eureka=false
#关闭eureka的自我保护机制
eureka.server.enable-self-preservation=false
# eureka server缓存readWriteCacheMap失效时间(默认180s)，这个只有在这个时间过去后缓存才会失效，失效前不会更新，过期后从registry重新读取注册服务信息，registry是一个ConcurrentHashMap。
# 由于启用了evict其实就用不太上改这个配置了
#eureka.server.response-cache-auto-expiration-in-seconds=180
# 启用主动失效，并且每次主动失效检测间隔为10s
#eureka.server.eviction-interval-timer-in-ms=10000
#是否拉取服务
eureka.client.fetch-registry=false

###### 开发环境配置 ######
eureka.instance.hostname=localhost
spring.security.user.name=eureka
spring.security.user.password=123456